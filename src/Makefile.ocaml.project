#
#       Generic project file for OCAML
#       $Id: Makefile.ocaml.project,v 1.5 2000/01/18 13:26:31 sufrin Exp $
#       Include this in an environment in which the following variables are set
#
#         SOURCES   = sources of all ml units (including mly/mll files)
#         GENERATED = files generated from mly/mll files
#         LISTING   = things to list as well as the sources for list? targets
#
#         NAME      = name of the target program
#         VERSION   = version of the target program
#
include         $(TOPLEVEL)/Makefile.ocaml.rules
#
#
#

# Default target is 'all'

all::           ALWAYS DEPEND
all.opt::       ALWAYS DEPEND

# realclean includes clean'ing

realclean::     clean

clean::;        rm -f $(GENERATED)

# Files made in this directory from source files. They make up the
# executable.

CMO =           $(patsubst %.ml,%.cmo,$(patsubst %.mll,%.ml,version.ml $(SOURCES:.mly=.ml)))
CMX =           $(CMO:.cmo=.cmx)
OBJ =           $(CMO:.cmo=.o)
CMI =           $(CMO:.cmo=.cmi)

clean::;        rm -f $(CMO) $(CMX) $(OBJ) $(CMI)

list2::;        list2 $(SOURCES) $(LISTING) Makefile
list4::;        list4 $(SOURCES) $(LISTING) Makefile
checkpoint::;   -ci -l $(SOURCES) Makefile
checkin::;      -ci    $(SOURCES) Makefile
checkpoint::;   -ci -l $(TESTS)
checkin::;      -ci    $(TESTS)
checkout::;     -co -l $(SOURCES)

#
# Compiler flags used in Makefile.ocaml for compiling
#

CFLAGS =        $(INCLUDE)
OFLAGS =        $(INCLUDE) -unsafe -noassert
OFLAGS =        $(INCLUDE) 

# -----------------------------------------------------------------------------
# Targets
# -----------------------------------------------------------------------------

all::           $(NAME)
all.opt::       $(NAME).opt

$(NAME):        $(CMO) ; $(CAMLC)   $(CFLAGS) -o $@ $(CMO)
$(NAME).opt:    $(CMX) ; $(CAMLOPT) $(OFLAGS) -o $@ $(CMX)

# 
# cmo: just make all .cmo files (for interactive use in the toplevel)
#

cmo:            $(CMO)

realclean::;    rm -f $(NAME) $(NAME).opt

####
#### Generate source file with version and name information
####
version.ml:     $(SOURCES);\
                echo "let version=\"$(NAME)-$(VERSION) ($(shell date -u +'%R %A %b %d %Y'))\"" > $@

clean::;        rm -f version.ml
# 
# -----------------------------------------------------------------------------
# phony targets
# -----------------------------------------------------------------------------

# all code created by generators must be there before dependencies
# are calculated!

depend:         DEPEND ALWAYS

DEPEND:         $(SOURCES) $(GENERATED);\
                $(CAMLDEP) $(INCLUDE) $(SOURCES) $(GENERATED) > DEPEND

tags:           ALWAYS;\
                mltags *.mli *.ml 

clean::;        rm -f tags

#
# dummy target
#

ALWAYS:

# -----------------------------------------------------------------------------
# dependencies - include manually if your make does not support include
# -----------------------------------------------------------------------------

-include DEPEND







